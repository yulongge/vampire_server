var app = require('../app');
var debug = require('debug')('Vampire:server');
var http = require('http');
var https = require('https');
var fs = require('fs');

//console.log(process.env, 'process')
var port = normalizePort(process.env.PORT || '443');
app.set('port', port);

var options = {
    key:fs.readFileSync('./keys/ca.key'),
    cert:fs.readFileSync('./keys/ca.crt')
}
var server = https.createServer(options, app);

server.listen(port, function() {
	const {address, port} = server.address();
	console.log(`https listening at ${address}:${port}`)
});
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
	var port = parseInt(val, 10);
	if(isNaN(port)) {
		return val;
	}

	if(port >=0) {
		return port;
	}
	return false;
}

function onError(error) {
	if(error.syscall !== 'listen') {
		throw error;
	}
	var bind = typeof port === 'string'
		? 'Pipe ' + port
		: 'Port ' + port;
	switch(error.code) {
		case 'EACCES':
			console.error(bind + ' requires evevated privileges');
			process.exit(1);
			break;
		case 'EADDRINUSE':
			console.error(bind + ' is already in use');
			process.exit(1);
			break;
		default: 
			throw error;
	}
}

function onListening() {
	var addr = server.address();
	var bind = typeof addr === 'string'
		? 'pipe ' + addr
		: 'port ' + addr.port;
	debug('Listening on ' + bind);
}
